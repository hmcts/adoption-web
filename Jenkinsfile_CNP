#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('H 04 * * *')]),
  parameters([
    string(name: 'FRONTEND_URL', defaultValue: 'https://adoption-web.aat.platform.hmcts.net/', description: 'The URL you want to run tests against'),
    string(name: 'FUNCTIONAL_TESTS_WORKERS',
      defaultValue: '2',
      description: 'Number of workers running functional tests'),
  ])
])

@Library('Infrastructure')

import uk.gov.hmcts.contino.AppPipelineConfig

def type = 'nodejs'
def product = 'adoption'
def component = 'web'

// SAUCELABS config - configured on Jenkins
env.SAUCE_USERNAME = 'username'
env.SAUCE_ACCESS_KEY = 'privatekey'
env.SAUCE_TUNNEL_IDENTIFIER = 'reformtunnel'

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

def secrets = [
  'adoption-${env}': [
    secret('idam-secret', 'IDAM_SECRET'),
    secret('citizen-user', 'CITIZEN_USERNAME'),
    secret('citizen-password', 'CITIZEN_PASSWORD')
  ],
  's2s-${env}': [
    secret('microservicekey-adoption-web', 'SERVICE_AUTH_SECRET')
  ]
]

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)
def branchesToSync = ['demo', 'perftest', 'ithc']

def pipelineConf = new AppPipelineConfig()
pipelineConf.vaultSecrets = secrets

env.IDAM_URL = 'https://idam-api.aat.platform.hmcts.net'

withNightlyPipeline(type, product, component) {
  env.ADOP_WEB_URL = params.FRONTEND_URL
  enableAksStagingDeployment()
  disableLegacyDeployment()
  enableSlackNotifications('#adoption-tech')

  loadVaultSecrets(secrets)
  enableCrossBrowserTest(['firefox','safari'])
  after('build') {
    yarnBuilder.yarn('build')
  }

  before('crossBrowserTest') {
    env.TEST_RETRIES = 5
  }

  after('crossBrowserTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'output/**/*'
  }

  after('test') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'coverage/**/*'
  }

  before('functionalTest:preview') {
    env.ADOP_WEB_URL = "https://adoption-web-pr-${CHANGE_ID}.service.core-compute-preview.internal/"
    env.TEST_RETRIES = 5
  }

  after('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'output/**/*'

    yarnBuilder.yarn('test:functional')
  }

  before('smoketest:preview') {
    env.ADOP_WEB_URL = "https://adoption-web-pr-${CHANGE_ID}.service.core-compute-preview.internal/"
    env.TEST_RETRIES = 5
  }

  before('smoketest:aat') {
    env.ADOP_WEB_URL = "https://adoption-web-staging.service.core-compute-aat.internal/"
    env.TEST_RETRIES = 5
  }

  after('smoketest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'output/**/*'

  }

  before('functionalTest:aat') {
    yarnBuilder.yarn('test:functional:skip')
    env.TEST_RETRIES = 5
  }

  after('functionalTest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'output/**/*'

  }


}
